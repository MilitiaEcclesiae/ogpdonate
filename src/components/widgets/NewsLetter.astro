---
// Props for customization
export interface Props {
  backgroundImage: string;
  title: string;
  subtitle: string;
  buttonText: string;
}

const { backgroundImage, title, subtitle, buttonText } = Astro.props;
---

<div
  class="newsletter-container"
  style={`background-image: url('${backgroundImage}');`}
>
  <div class="newsletter-content">
    <h1 class="newsletter-title">{title}</h1>
    <p class="newsletter-subtitle">{subtitle}</p>
    <button id="newsletter-button" class="newsletter-button">{buttonText}</button>
  </div>
</div>

<script lang="ts">
  // Function to load the external script
  const loadScript = () => {
    console.log('Loading external script...'); // Debugging
    const script = document.createElement('script');
    script.src = 'https://my.afrus.org/template/index.js';
    script.async = true;
    script.onload = () => {
      console.log('Script loaded successfully!'); // Debugging
    };
    script.onerror = () => {
      console.error('Failed to load script!'); // Debugging
    };
    document.body.appendChild(script);
  };

  // Function to show an alert dialog
  const showAlert = () => {
    console.log('Button clicked!'); // Debugging
    alert('Loading content...'); // Show an alert dialog
    loadScript(); // Load the external script after the alert is shown
  };

  // Attach event listener to the button
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('newsletter-button');
    if (button) {
      console.log('Button found!'); // Debugging
      button.addEventListener('click', showAlert);
    } else {
      console.error('Button element not found!'); // Debugging
    }
  });
</script>

<style>
  .newsletter-container {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 400px; /* Adjust height as needed */
    background-size: cover;
    background-position: center;
    color: white;
    text-align: center;
  }

  .newsletter-content {
    max-width: 600px;
    padding: 20px;
    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
    border-radius: 10px;
  }

  .newsletter-title {
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .newsletter-subtitle {
    font-size: 1rem;
    margin-bottom: 1.5rem;
  }

  .newsletter-button {
    display: inline-block;
    padding: 10px 20px;
    font-size: 1rem;
    color: white;
    background-color: #b2161e; /* Primary button color */
    border-radius: 5px;
    text-decoration: none;
    transition: background-color 0.3s ease;
    cursor: pointer;
    border: none;
  }

  .newsletter-button:hover {
    background-color: #8a1118; /* Darker shade on hover */
  }
</style>