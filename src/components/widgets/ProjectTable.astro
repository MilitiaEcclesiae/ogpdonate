---
export interface Project {
  year: number;
  region: string;
  name: string;
}

export interface Props {
  projects: Project[];
}

const { projects } = Astro.props;

// State for search functionality
let searchQuery = "";
const filteredProjects = projects.filter((project) =>
  project.name.toLowerCase().includes(searchQuery.toLowerCase())
);
---

<section class="container mx-auto p-4">
  <!-- Search Input -->
  <div class="mb-6">
    <input
      type="text"
      id="searchInput"
      placeholder="Search by project name..."
      class="w-full p-2 border border-gray-300 rounded-md dark:border-gray-700 dark:bg-slate-900 dark:text-gray-100"
    />
  </div>

  <!-- Table -->
  <div class="overflow-x-auto">
    <table class="min-w-full bg-white dark:bg-slate-900 border border-gray-200 dark:border-gray-700">
      <thead class="bg-gray-50 dark:bg-slate-800">
        <tr>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
            Year
          </th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
            Region
          </th>
          <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
            Name
          </th>
        </tr>
      </thead>
      <tbody id="tableBody" class="divide-y divide-gray-200 dark:divide-gray-700">
        {
          filteredProjects.map((project) => (
            <tr class="hover:bg-gray-50 dark:hover:bg-slate-800">
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">
                {project.year}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">
                {project.region}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">
                {project.name}
              </td>
            </tr>
          ))
        }
      </tbody>
    </table>
  </div>
</section>

<script>
    // Client-side search functionality
    const searchInput = document.getElementById("searchInput") as HTMLInputElement | null;
    const tableBody = document.getElementById("tableBody");
  
    if (searchInput && tableBody) {
      searchInput.addEventListener("input", () => {
        const query = searchInput.value.toLowerCase(); // Now TypeScript knows `value` exists
        const rows = tableBody.querySelectorAll("tr");
  
        rows.forEach((row) => {
          const name = row.querySelector("td:last-child")?.textContent?.toLowerCase();
          if (name) {
            row.style.display = name.includes(query) ? "" : "none";
          }
        });
      });
    }
  </script>