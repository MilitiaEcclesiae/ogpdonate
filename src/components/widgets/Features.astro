---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import ItemGrid from '~/components/ui/ItemGrid.astro';
import Headline from '~/components/ui/Headline.astro';
import type { Features as Props } from '~/types';

// Extend the Props interface to include margin props
export interface ComponentProps extends Props {
  marginTop?: string; // Top margin (e.g., "2rem")
  marginBottom?: string;
  marginLeft?: string;
  marginRight?: string;
}

const {
  title = '',
  subtitle = '',
  tagline = '',
  items = [],
  columns = 2,
  defaultIcon,
  id,
  isDark = false,
  classes = {},
  bg = '',
  marginTop = "2rem", // Default margin top
  marginBottom = "2rem", // Default margin bottom
  marginLeft = "2rem", // Default margin left
  marginRight = "2rem", // Default margin right
} = Astro.props as ComponentProps; // Cast props to the extended type

// Validate items array
const validatedItems = Array.isArray(items) ? items : [];
---

<!-- Apply margins using Tailwind's arbitrary value syntax -->
<div class={`mt-[${marginTop}] mb-[${marginBottom}] ml-[${marginLeft}] mr-[${marginRight}]`}>
  <WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-5xl ${classes?.container ?? ''}`} bg={bg}>
    <Headline
      title={title}
      subtitle={subtitle}
      tagline={tagline}
      classes={classes?.headline as Record<string, string>}
    />
    <ItemGrid
      items={validatedItems}
      columns={columns}
      defaultIcon={defaultIcon}
      classes={{
        container: '',
        title: 'md:text-[1.3rem]',
        icon: 'text-white bg-primary rounded-full w-10 h-10 p-2 md:w-12 md:h-12 md:p-3 mr-4 rtl:ml-4 rtl:mr-0',
        ...((classes?.items as Record<string, never>) ?? {}),
      }}
    />
  </WidgetWrapper>
</div>